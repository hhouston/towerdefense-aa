{"version":3,"sources":["webpack:///webpack/bootstrap 3c256d41101988e8a3d2","webpack:///./lib/towerdefense.js","webpack:///./lib/game.js","webpack:///./lib/tower.js","webpack:///./lib/bullet.js","webpack:///./lib/moving_object.js","webpack:///./lib/util.js","webpack:///./lib/enemy.js","webpack:///./lib/grid.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACXD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,uBAAuB;AAC1C,sBAAqB,uBAAuB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7IA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AClEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACZA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,kBAAkB;AACvC,wBAAuB,kBAAkB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3c256d41101988e8a3d2","const Game = require(\"./game\");\nconst Grid = require(\"./grid\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new Grid(game, ctx).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/towerdefense.js\n// module id = 0\n// module chunks = 0","const Tower = require(\"./tower\");\nconst Bullet = require(\"./bullet\");\nconst Enemy = require(\"./enemy\");\nconst Util = require(\"./util\");\n\nclass Game {\n  constructor() {\n    this.enemies = [];\n    this.bullets = [];\n    this.towers = [];\n  }\n\n  add(object) {\n    if (object instanceof Enemy) {\n      this.enemies.push(object);\n    } else if (object instanceof Tower) {\n      this.towers.push(object);\n    } else if (object instanceof Bullet) {\n      this.bullets.push(object);\n    } else {\n      throw \"wtf?\";\n    }\n  }\n\n  addEnemy() {\n    const enemy = new Enemy({\n      pos: [50, 50],\n      game: this\n    });\n\n    this.add(enemy);\n\n    return enemy;\n  }\n\n  addTower() {\n    const tower = new Tower({\n      pos: [200, 350],\n      game: this\n    });\n\n    this.add(tower);\n\n    return tower;\n  }\n\n  allObjects() {\n    return [].concat(this.enemies, this.bullets, this.towers);\n  }\n\n  checkCollisions() {\n    const allObjects = this.allObjects();\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 1; j < allObjects.length; j++) {\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n\n        if ((obj1 instanceof Bullet) && (obj2 instanceof Enemy) || (obj1 instanceof Enemy) && (obj2 instanceof Bullet)  ) {\n          if (obj1.isCollidedWith(obj2)) {\n            obj1.remove();\n            obj2.remove();\n          }\n        }\n      }\n    }\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    this.allObjects().forEach((object) => {\n      if (object instanceof Tower) {\n        object.drawTower(ctx);\n      } else{\n        object.draw(ctx);\n      }\n    });\n  }\n\n  isOutOfBounds(pos) {\n    return (pos[0] < 0) || (pos[1] < 0) ||\n      (pos[0] > Game.DIM_X) || (pos[1] > Game.DIM_Y);\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((object) => {\n      if (!(object instanceof Tower)) {\n        object.move(delta);\n      }\n    });\n  }\n\n  remove(object) {\n    if (object instanceof Bullet) {\n      this.bullets.splice(this.bullets.indexOf(object), 1);\n    } else if (object instanceof Enemy) {\n      this.enemies.splice(this.enemies.indexOf(object), 1);\n    } else if (object instanceof Tower) {\n      this.towers.splice(this.towers.indexOf(object), 1);\n    } else {\n      throw \"wtf?\";\n    }\n  }\n\n  inRange() {\n    this.towers.forEach(tower => {\n      this.enemies.forEach(enemy => {\n\n        let towerX = tower.pos[0];\n        let towerY = tower.pos[1];\n\n        let enemyX = enemy.pos[0];\n        let enemyY = enemy.pos[1];\n\n        let dist = Util.dist([towerX, towerY], [enemyX, enemyY]);\n\n\n        if(dist < 160){\n          let bulletX = enemyX - towerX;\n          let bulletY = enemyY - towerY;\n\n          tower.fireBullet(bulletX, bulletY);\n        }\n      });\n    });\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n}\n\nGame.BG_COLOR = \"#FFF\";\nGame.DIM_X = 450;\nGame.DIM_Y = 450;\nGame.FPS = 32;\nGame.NUM_ENEMIES = 1;\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const Bullet = require(\"./bullet\");\nconst Util = require(\"./util\");\nconst MovingObject = require(\"./moving_object\");\n\nclass Tower extends MovingObject {\n  constructor(options) {\n    options.radius = Tower.RADIUS;\n    options.vel = options.vel || [0, 0];\n    options.color = options.color || 'green';\n    super(options);\n  }\n\n  drawTower(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    let softSmile = new Image();\n    softSmile.src = 'img/softSmile.png';\n    softSmile.onload = ctx.drawImage(softSmile, this.pos[0]-10, this.pos[1]-10);\n\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    // ctx.fill();\n    debugger\n  }\n\n  fireBullet(bulletX, bulletY) {\n\n    const relVel = Util.scale(\n      Util.dir(this.vel),\n      Bullet.SPEED\n    );\n\n    //calculate bulletVel based on enemy position\n    let bulletVel = [\n      bulletX, bulletY\n    ];\n\n    bulletVel = Util.normalize(bulletVel);\n    bulletVel = Util.scale(bulletVel, Bullet.SPEED);\n    // bulletVel = bulletVel * 2;\n    // const bulletVel = [\n    //   bulletX, bulletY\n    // ];\n    // debugger;\n\n    const bullet = new Bullet({\n      pos: this.pos,\n      vel: bulletVel,\n      color: 'red',\n      game: this.game\n    });\n\n    this.game.add(bullet);\n    // debugger;\n  }\n\n  power(impulse) {\n    this.vel[0] += impulse[0];\n    this.vel[1] += impulse[1];\n  }\n\n}\n\nTower.RADIUS = 15;\nmodule.exports = Tower;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tower.js\n// module id = 2\n// module chunks = 0","const MovingObject = require(\"./moving_object\");\n\nclass Bullet extends MovingObject {\n  constructor(options) {\n    options.radius = Bullet.RADIUS;\n    super(options);\n  }\n}\n\nBullet.RADIUS = 2;\nBullet.SPEED = 5;\n\nmodule.exports = Bullet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bullet.js\n// module id = 3\n// module chunks = 0","const Util = require(\"./util\");\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.game = options.game;\n    this.isWrappable = true;\n  }\n\n  collideWith(otherObject) {\n    // default do nothing\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n\n  isCollidedWith(otherObject) {\n    const centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n  move(timeDelta) {\n    //timeDelta is number of milliseconds since last move\n    //if the computer is busy the time delta will be larger\n    //in this case the MovingObject should move farther in this frame\n    //velocity of object is how far it should move in 1/60th of a second\n    if(this.color === \"#\") {\n      console.log('enemy');\n      this.pos = [this.pos[0] + 3, this.pos[1]];\n\n    } else {\n      const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n      offsetX = this.vel[0] * velocityScale,\n      offsetY = this.vel[1] * velocityScale;\n\n      this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n\n    }\n\n    if (this.game.isOutOfBounds(this.pos)) {\n      // TODO: logic for enemy scoring\n      this.remove();\n    }\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_object.js\n// module id = 4\n// module chunks = 0","const Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir (vec) {\n    const norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Find the length of the vector.\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec (length) {\n    const deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n  wrap (coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  },\n\n  normalize(vector) {\n    let length = Math.sqrt(Math.pow(vector[0], 2) + Math.pow(vector[1], 2));\n    return vector.map(x=> x / length);\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 5\n// module chunks = 0","const Util = require(\"./util\");\nconst MovingObject = require(\"./moving_object\");\nconst Tower = require(\"./tower\");\nconst Bullet = require(\"./bullet\");\n\nconst DEFAULTS = {\n\tCOLOR: \"#505050\",\n\tRADIUS: 15,\n\tSPEED: 5\n};\n\nclass Enemy extends MovingObject {\n  constructor(options = {}) {\n    options.color = DEFAULTS.COLOR;\n    options.pos = options.pos || [30, 200];\n    options.radius = DEFAULTS.RADIUS;\n    options.vel = options.vel || [0, 0];\n\t\tsuper(options);\n  }\n\n\tpower(impulse) {\n\t\tthis.pos[0] += impulse[0];\n\t\tthis.pos[1] += impulse[1];\n\t}\n\n\n  collideWith(otherObject) {\n    if (otherObject instanceof Bullet || otherObject instanceof Enemy) {\n      // this.remove();\n      // otherObject.remove();\n      return true;\n    } else {\n      throw \"wtf?\";\n    }\n  }\n}\n\nmodule.exports = Enemy;\n\n\n\n\n  // this.life = this.maxLife + addedLife;\n\n//common to all Emeny objects\n// Enemy.prototype.maxLife = 40;\n// Enemy.prototype.speed = 20;\n// Enemy.prototype.color = 'red';\n//\n// Enemy.prototype.draw = function() {\n//\n//   context.beginPath();\n//   context.fillStyle = this.color;\n//   debugger;\n//   context.fillRect(this.x,this.y,450, 450);\n//   //life bar\n//   context.fillStyle='green';\n//   debugger;\n//   context.fillRect(this.x,this.y+rectSize/3,rectSize*this.life/(this.maxLife+addedLife),rectSize/3);\n// };\n\n// Enemy.prototype.move = function() {\n//   var move = this.speed;\n//   if(this.x < rightBorder && this.y < firstBorder) this.x += move;\n//   else if (this.x >= rightBorder && this.y < firstBorder) this.y += move;\n//   else if (this.x >= leftBorder && this.y <= secondBorder) this.x -= move;\n//   else if (this.x <= leftBorder && this.y <= secondBorder) this.y += move;\n//   else if (this.x <= rightBorder && this.y < thirdBorder) this.x += move;\n//   else if (this.x >= rightBorder  && this.y <= thirdBorder) this.y += move;\n//   else  {\n//     this.x -= move;\n//     //returns true so enemy can be removed if another function\n//     if(this.x < 0) return true;\n//   }\n//   return false;\n// };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/enemy.js\n// module id = 6\n// module chunks = 0","class Grid {\n  constructor(game, ctx) {\n    this.game = game;\n    this.ctx = ctx;\n    this.tower = this.game.addTower();\n    this.enemy = this.game.addEnemy();\n\n    this.generateGrid = this.generateGrid.bind(this);\n  }\n\n  bindKeyHandlers() {\n    const enemy = this.enemy;\n\n    Object.keys(Grid.MOVES).forEach((k) => {\n      let move = Grid.MOVES[k];\n      key(k, () => {\n        enemy.power(move);\n      });\n    });\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    this.generateGrid();\n    setInterval(() => this.game.inRange(), 1000);\n\n    //starts the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    this.generateGrid();\n\n    const timeDelta = time - this.lastTime;\n\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n    // debugger;\n\n    //every call to animate requests causes another call to animate\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  generateGrid(gridSize = 450, squareSize = 30) {\n    let square;\n    let numberOfRows = gridSize / squareSize;\n\n    for (let x = 0.5; x < gridSize + 1; x += squareSize) {\n      for (let y = 0.5; y < gridSize + 1; y += squareSize) {\n        this.ctx.moveTo(x, 0);\n        this.ctx.lineTo(x, 450);\n\n        this.ctx.moveTo(0, y);\n        this.ctx.lineTo(450, y);\n      }\n    }\n    this.ctx.strokeStyle = \"#ddd\";\n    this.ctx.stroke();\n  }\n\n}\n\nGrid.MOVES = {\n  \"up\": [ 0, -5],\n  \"left\": [-5,  0],\n  \"down\": [ 0,  5],\n  \"right\": [ 5,  0],\n};\n\nmodule.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/grid.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}